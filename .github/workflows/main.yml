name: Monthly Database Backup

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 1 * *'

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Install Required Tools
        run: |
          # Add the official PostgreSQL repository to get the latest versions
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          
          # Install PostgreSQL client version 17
          sudo apt-get install -y postgresql-client-17
          
          # Install rclone
          curl https://rclone.org/install.sh | sudo bash

      - name: Debug and Verify Installations
        run: |
          echo "--- Verifying pg_dump version ---"
          # Check which pg_dump is found in the default PATH
          which pg_dump
          # Check the version of the default pg_dump
          pg_dump --version
          # Check the version of the specific pg_dump v17 we installed
          /usr/lib/postgresql/17/bin/pg_dump --version

      - name: Create Service Account Key Files and Debug Secret
        run: |
          echo "--- Verifying Google Drive Secret ---"
          # This next line is a SAFE way to debug. It only shows the first and last characters.
          # A valid secret should show "{" as the start and "}" as the end.
          echo "Secret starts with: [$(echo '${{ secrets.GDRIVE_SA_KEY_1 }}' | head -c 1)] and ends with: [$(echo '${{ secrets.GDRIVE_SA_KEY_1 }}' | tail -c 1)]"

          echo "${{ secrets.GDRIVE_SA_KEY_1 }}" > gdrive1.json
        
      - name: Perform Backup and Upload
        env:
          NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
        run: |
          FILENAME="backup-$(date +'%Y-%m-%d').sql.gz"
          echo "Creating backup file: $FILENAME"
          
          # FIXED: Use the full, direct path to the version 17 executable to avoid version conflicts
          /usr/lib/postgresql/17/bin/pg_dump "$NEON_DATABASE_URL" | gzip > $FILENAME
          
          echo "Uploading to Google Drive..."
          rclone copy $FILENAME :drive:/Neon-Backups/ --drive-service-account-file gdrive1.json -v

          rm $FILENAME
          echo "Backup complete."
